plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.s95ammar.thunderstruck"
        minSdkVersion appMinSdk
        targetSdkVersion appTargetSdk
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }

    }

    buildTypes {
        debug {
            buildConfigField "String", "SERVER_BASE_URL", SERVER_BASE_URL_DEV
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_BASE_URL", SERVER_BASE_URL_PROD
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        androidTest.java.srcDirs += "src/testCommon/java"
        test.java.srcDirs += "src/testCommon/java"
    }
    packagingOptions {
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        exclude "**/attach_hotspot_windows.dll"
    }
}

dependencies {

    implementation "androidx.core:core-ktx:${depVersions.coreKtx}"
    implementation "androidx.appcompat:appcompat:${depVersions.appcompat}"
    implementation "com.google.android.material:material:${depVersions.material}"
    implementation "androidx.constraintlayout:constraintlayout:${depVersions.constraintlayout}"
    implementation "androidx.legacy:legacy-support-v4:${depVersions.legacy}"
    implementation "androidx.fragment:fragment-ktx:${depVersions.fragmentKtx}"

    // local tests
    testImplementation "junit:junit:${depVersions.junitJunit}"
    testImplementation "org.hamcrest:hamcrest-all:${depVersions.hamcrest}"
    testImplementation "androidx.test:core:${depVersions.androidxTest}"
    testImplementation "androidx.test:core-ktx:${depVersions.androidxTest}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${depVersions.coroutinesTest}"
    testImplementation "org.robolectric:robolectric:${depVersions.robolectric}"
    testImplementation "androidx.test.ext:junit:${depVersions.androidxJunit}"
    testImplementation "com.google.truth:truth:${depVersions.googleTruth}"
    testImplementation "androidx.arch.core:core-testing:${depVersions.androidxCoreTest}"
    testImplementation "io.mockk:mockk:${depVersions.mockk}"

    // instrumented tests
    androidTestImplementation "androidx.test.ext:junit:${depVersions.androidxJunit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${depVersions.espresso}"
    androidTestImplementation "junit:junit:${depVersions.junitJunit}"
    androidTestImplementation "androidx.test:core:${depVersions.androidxTest}"
    androidTestImplementation "androidx.test:core-ktx:${depVersions.androidxTest}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${depVersions.coroutinesTest}"
    androidTestImplementation "org.robolectric:robolectric:${depVersions.robolectric}"
    androidTestImplementation "androidx.test.ext:junit:${depVersions.androidxJunit}"
    androidTestImplementation "com.google.truth:truth:${depVersions.googleTruth}"
    androidTestImplementation "androidx.arch.core:core-testing:${depVersions.androidxCoreTest}"
    androidTestImplementation "io.mockk:mockk:${depVersions.mockk}"

    // Hilt
    implementation "com.google.dagger:hilt-android:${depVersions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${depVersions.hilt}"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${depVersions.hiltLifecycle}"
    kapt "androidx.hilt:hilt-compiler:${depVersions.hiltLifecycle}"
    implementation "androidx.hilt:hilt-navigation-fragment:${depVersions.hiltNavigation}"


    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${depVersions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${depVersions.navigation}"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${depVersions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${depVersions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${depVersions.lifecycleExt}"

    // Persistence
    implementation "androidx.room:room-runtime:${depVersions.room}"
    kapt "androidx.room:room-compiler:${depVersions.room}"
    implementation "androidx.room:room-ktx:${depVersions.room}"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:${depVersions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${depVersions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${depVersions.okhttp}"

}